{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { ColorBlock } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport React, { forwardRef, useMemo } from 'react';\nimport { getAlphaColor } from '../util';\nimport ColorClear from './ColorClear';\nvar ColorTrigger = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _classNames;\n  var color = props.color,\n    prefixCls = props.prefixCls,\n    open = props.open,\n    colorCleared = props.colorCleared,\n    disabled = props.disabled,\n    format = props.format,\n    className = props.className,\n    showText = props.showText,\n    rest = __rest(props, [\"color\", \"prefixCls\", \"open\", \"colorCleared\", \"disabled\", \"format\", \"className\", \"showText\"]);\n  var colorTriggerPrefixCls = \"\".concat(prefixCls, \"-trigger\");\n  var containerNode = useMemo(function () {\n    return colorCleared ? /*#__PURE__*/React.createElement(ColorClear, {\n      prefixCls: prefixCls\n    }) : /*#__PURE__*/React.createElement(ColorBlock, {\n      prefixCls: prefixCls,\n      color: color.toRgbString()\n    });\n  }, [color, colorCleared, prefixCls]);\n  var genColorString = function genColorString() {\n    var hexString = color.toHexString().toUpperCase();\n    var alpha = getAlphaColor(color);\n    switch (format) {\n      case 'rgb':\n        return color.toRgbString();\n      case 'hsb':\n        return color.toHsbString();\n      case 'hex':\n      default:\n        return alpha < 100 ? \"\".concat(hexString.slice(0, 7), \",\").concat(alpha, \"%\") : hexString;\n    }\n  };\n  var renderText = function renderText() {\n    if (typeof showText === 'function') {\n      return showText(color);\n    }\n    if (showText) {\n      return genColorString();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: classNames(colorTriggerPrefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(colorTriggerPrefixCls, \"-active\"), open), _defineProperty(_classNames, \"\".concat(colorTriggerPrefixCls, \"-disabled\"), disabled), _classNames))\n  }, rest), containerNode, showText && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(colorTriggerPrefixCls, \"-text\")\n  }, renderText()));\n});\nexport default ColorTrigger;","map":null,"metadata":{},"sourceType":"module"}