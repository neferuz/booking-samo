{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport Avatar from './avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nvar AvatarContextProvider = function AvatarContextProvider(props) {\n  var _React$useContext = React.useContext(AvatarContext),\n    size = _React$useContext.size,\n    shape = _React$useContext.shape;\n  var avatarContextValue = React.useMemo(function () {\n    return {\n      size: props.size || size,\n      shape: props.shape || shape\n    };\n  }, [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nvar Group = function Group(props) {\n  var _React$useContext2 = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext2.getPrefixCls,\n    direction = _React$useContext2.direction;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    style = props.style,\n    maxCount = props.maxCount,\n    maxStyle = props.maxStyle,\n    size = props.size,\n    shape = props.shape,\n    _props$maxPopoverPlac = props.maxPopoverPlacement,\n    maxPopoverPlacement = _props$maxPopoverPlac === void 0 ? 'top' : _props$maxPopoverPlac,\n    _props$maxPopoverTrig = props.maxPopoverTrigger,\n    maxPopoverTrigger = _props$maxPopoverTrig === void 0 ? 'hover' : _props$maxPopoverTrig,\n    children = props.children;\n  var prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var cls = classNames(groupPrefixCls, _defineProperty({}, \"\".concat(groupPrefixCls, \"-rtl\"), direction === 'rtl'), className, rootClassName, hashId);\n  var childrenWithProps = toArray(children).map(function (child, index) {\n    return cloneElement(child, {\n      key: \"avatar-key-\".concat(index)\n    });\n  });\n  var numOfChildren = childrenWithProps.length;\n  if (maxCount && maxCount < numOfChildren) {\n    var childrenShow = childrenWithProps.slice(0, maxCount);\n    var childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: \"\".concat(groupPrefixCls, \"-popover\")\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: maxStyle\n    }, \"+\".concat(numOfChildren - maxCount))));\n    return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default Group;","map":null,"metadata":{},"sourceType":"module"}