{"ast":null,"code":"import _slicedToArray from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { groupKeysMap } from '../../_util/transKeys';\nfunction useData(dataSource, rowKey, targetKeys) {\n  var mergedDataSource = React.useMemo(function () {\n    return (dataSource || []).map(function (record) {\n      if (rowKey) {\n        record = Object.assign(Object.assign({}, record), {\n          key: rowKey(record)\n        });\n      }\n      return record;\n    });\n  }, [dataSource, rowKey]);\n  var _React$useMemo = React.useMemo(function () {\n      var leftData = [];\n      var rightData = new Array((targetKeys || []).length);\n      var targetKeysMap = groupKeysMap(targetKeys || []);\n      mergedDataSource.forEach(function (record) {\n        // rightData should be ordered by targetKeys\n        // leftData should be ordered by dataSource\n        if (targetKeysMap.has(record.key)) {\n          rightData[targetKeysMap.get(record.key)] = record;\n        } else {\n          leftData.push(record);\n        }\n      });\n      return [leftData, rightData];\n    }, [mergedDataSource, targetKeys, rowKey]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    leftDataSource = _React$useMemo2[0],\n    rightDataSource = _React$useMemo2[1];\n  return [mergedDataSource, leftDataSource, rightDataSource];\n}\nexport default useData;","map":null,"metadata":{},"sourceType":"module"}