{"ast":null,"code":"import _defineProperty from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _checkable, _Object$assign, _ref;\n  var paddingXXS = token.paddingXXS,\n    lineWidth = token.lineWidth,\n    tagPaddingHorizontal = token.tagPaddingHorizontal,\n    componentCls = token.componentCls;\n  var paddingInline = tagPaddingHorizontal - lineWidth;\n  var iconMarginInline = paddingXXS - lineWidth;\n  return _ref = {}, _defineProperty(_ref, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    display: 'inline-block',\n    height: 'auto',\n    marginInlineEnd: token.marginXS,\n    paddingInline: paddingInline,\n    fontSize: token.tagFontSize,\n    lineHeight: token.tagLineHeight,\n    whiteSpace: 'nowrap',\n    background: token.defaultBg,\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorder),\n    borderRadius: token.borderRadiusSM,\n    opacity: 1,\n    transition: \"all \".concat(token.motionDurationMid),\n    textAlign: 'start',\n    position: 'relative'\n  }, _defineProperty(_Object$assign, \"&\".concat(componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  }), _defineProperty(_Object$assign, '&, a, a:hover', {\n    color: token.defaultColor\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-close-icon\"), {\n    marginInlineStart: iconMarginInline,\n    color: token.colorTextDescription,\n    fontSize: token.tagIconSize,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationMid),\n    '&:hover': {\n      color: token.colorTextHeading\n    }\n  }), _defineProperty(_Object$assign, \"&\".concat(componentCls, \"-has-color\"), _defineProperty({\n    borderColor: 'transparent'\n  }, \"&, a, a:hover, \".concat(token.iconCls, \"-close, \").concat(token.iconCls, \"-close:hover\"), {\n    color: token.colorTextLightSolid\n  })), _defineProperty(_Object$assign, \"&-checkable\", (_checkable = {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    cursor: 'pointer'\n  }, _defineProperty(_checkable, \"&:not(\".concat(componentCls, \"-checkable-checked):hover\"), {\n    color: token.colorPrimary,\n    backgroundColor: token.colorFillSecondary\n  }), _defineProperty(_checkable, '&:active, &-checked', {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_checkable, '&-checked', {\n    backgroundColor: token.colorPrimary,\n    '&:hover': {\n      backgroundColor: token.colorPrimaryHover\n    }\n  }), _defineProperty(_checkable, '&:active', {\n    backgroundColor: token.colorPrimaryActive\n  }), _checkable)), _defineProperty(_Object$assign, \"&-hidden\", {\n    display: 'none'\n  }), _defineProperty(_Object$assign, \"> \".concat(token.iconCls, \" + span, > span + \").concat(token.iconCls), {\n    marginInlineStart: paddingInline\n  }), _Object$assign))), _defineProperty(_ref, \"\".concat(componentCls, \"-borderless\"), {\n    borderColor: 'transparent',\n    background: token.tagBorderlessBg\n  }), _ref;\n};\n// ============================== Export ==============================\nexport var prepareToken = function prepareToken(token) {\n  var lineWidth = token.lineWidth,\n    fontSizeIcon = token.fontSizeIcon;\n  var tagFontSize = token.fontSizeSM;\n  var tagLineHeight = \"\".concat(token.lineHeightSM * tagFontSize, \"px\");\n  var tagToken = mergeToken(token, {\n    tagFontSize: tagFontSize,\n    tagLineHeight: tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return tagToken;\n};\nexport var prepareCommonToken = function prepareCommonToken(token) {\n  return {\n    defaultBg: token.colorFillQuaternary,\n    defaultColor: token.colorText\n  };\n};\nexport default genComponentStyleHook('Tag', function (token) {\n  var tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareCommonToken);","map":null,"metadata":{},"sourceType":"module"}