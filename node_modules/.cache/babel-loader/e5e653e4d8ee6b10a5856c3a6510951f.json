{"ast":null,"code":"import _slicedToArray from \"/Users/feruzxasanov/Downloads/booking samo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useEvent } from 'rc-util';\nimport raf from \"rc-util/es/raf\";\nimport showWaveEffect from './WaveEffect';\nimport { ConfigContext } from '../../config-provider';\nimport useToken from '../../theme/useToken';\nimport { TARGET_CLS } from './interface';\nexport default function useWave(nodeRef, className, component) {\n  var _React$useContext = React.useContext(ConfigContext),\n    wave = _React$useContext.wave;\n  var _useToken = useToken(),\n    _useToken2 = _slicedToArray(_useToken, 3),\n    token = _useToken2[1],\n    hashId = _useToken2[2];\n  var showWave = useEvent(function (event) {\n    var node = nodeRef.current;\n    if ((wave === null || wave === void 0 ? void 0 : wave.disabled) || !node) {\n      return;\n    }\n    var targetNode = node.querySelector(\".\".concat(TARGET_CLS)) || node;\n    var _ref = wave || {},\n      showEffect = _ref.showEffect; // Customize wave effect\n    (showEffect || showWaveEffect)(targetNode, {\n      className: className,\n      token: token,\n      component: component,\n      event: event,\n      hashId: hashId\n    });\n  });\n  var rafId = React.useRef();\n  // Merge trigger event into one for each frame\n  var showDebounceWave = function showDebounceWave(event) {\n    raf.cancel(rafId.current);\n    rafId.current = raf(function () {\n      showWave(event);\n    });\n  };\n  return showDebounceWave;\n}","map":null,"metadata":{},"sourceType":"module"}